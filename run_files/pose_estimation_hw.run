# Important Zedcam PL parameters
#
# irq_num
# 0	cam_0 irq. Affects src/components/camera/main.cc!!!
# 1	cam_1 irq. Affects src/components/camera/main.cc!!!
# 2	vdma_3 mm2s irq
# 3	vdma_3 s2mm irq
# 4	vdma_4 mm2s irq
# 5	vdma_4 s2mm irq
# 6 RRO irq
# 7 RR1 irq
# 8 cam_2 irq. Affects src/components/camera/main.cc!!!
#
# vdma_num
# 0 cam_0 raw input. Affects src/components/camera/main.cc!!!
# 1 cam_1 raw input. Affects src/components/camera/main.cc!!!
# 2 cam_2 raw input. Affects src/components/camera/main.cc!!!
# 3 vdma_3 (for streaming RR data). Affects src/dirvers/vdma/spec/zynq/driver.h!!!
# 4 vdma_4 (for streaming RR data). Affects src/dirvers/vdma/spec/zynq/driver.h!!!
#
# tdest Affects hw_accelerator.h!!!
# 0	vdma_3
# 1	vdma_4
# 2	rr0 A
# 3	rr0 B
# 4	rr1 A
# 5	rr1 B


#
# Build
#

build {
	core
	init
	drivers/timer
	proxy/remote_rom/backend/nic_ip
	drivers/nic
	server/nic_bridge
	drivers/pl_irq
	drivers/gpio
	drivers/i2c
	drivers/vdma
	components/camera
	components/hw_accelerator
	drivers/sd_card
	server/fatfs_fs
	server/fs_rom
	server/bitstream_loader
}

set img_height 960
set img_width 1280

create_boot_directory

#
# Generate config
#

set config {
<config verbose="yes">}

append config {
	<parent-provides>
		<service name="CAP"/>
		<service name="LOG"/>
		<service name="RM"/>
		<service name="SIGNAL"/>
		<service name="IO_MEM"/>
		<service name="IRQ"/>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="CPU"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="300" />
	
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>

	<start name="zynq_pl_irq">
		<binary name="zynq_pl_irq_handler" />
		<resource name="RAM" quantum="1M" />
		<provides><service name="Pl_irq"/></provides>
		<config>
			<irq number="61"/>
			<irq number="62"/>
			<irq number="63"/>
			<irq number="64"/>
			<irq number="65"/>
			<irq number="66"/>
			<irq number="67"/>
			<irq number="68"/>
			<irq number="84"/>
		</config>
	</start>

	<start name="zynq_gpio">
		<binary name="zynq_gpio_drv" />
		<resource name="RAM" quantum="1M" />
		<provides><service name="Gpio"/></provides>
		<config>
			<gpio addr="0x41200000"/>
		</config>
	</start>

	<start name="zynq_i2c">
		<binary name="zynq_i2c_drv" />
		<resource name="RAM" quantum="1M" />
		<provides><service name="I2C"/></provides>
	</start>

	<start name="zynq_vdma">
		<binary name="zynq_vdma_drv" />
		<resource name="RAM" quantum="1M" />
		<provides><service name="Vdma"/></provides>
		<config>
			<vdma addr="0x43000000"/>
			<vdma addr="0x43010000"/>
			<vdma addr="0x43020000"/>
			<vdma addr="0x43100000"/>
			<vdma addr="0x43110000"/>
		</config>
	</start>

	<start name="camera" caps="300">
		<resource name="RAM" quantum="36M" />
		<provides><service name="ROM"/></provides>
		<route>
			<service name="ROM" label="trigger_remote"> <child name="remote_rom_client"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
		<config>
			<dst_rom name_left="img_left" name_right="img_right" size="0x140000"/>
			<trigger_rom name="trigger_remote"/>
		</config>
	</start>


	<start name="hw_accelerator" caps="300">
		<resource name="RAM" quantum="64M"/>
		<provides><service name="ROM"/></provides>
		<route>
			<service name="Dpr"> <child name="bitstream_loader"/> </service>
			<service name="ROM" label="img_left"> <child name="camera"/> </service>
			<service name="ROM" label="img_right"> <child name="camera"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
		<config>
			<region id="0" irq_num="6"/>
			<region id="1" irq_num="7"/>
			<vdma id="3" irq_num="3"/>
			<vdma id="4" irq_num="5"/>
			<src name="img_left"/>
			<src name="img_right"/>
			<dst name="img_rectified_left" rom_size="0x400000"/>
			<dst name="img_rectified_right" rom_size="0x400000"/>
			<dst name="img_disparity" rom_size="0x400000"/>
			<dst name="img_pointcloud" rom_size="0x1300000"/>
			<dst name="img_pc_small" rom_size="0x400000"/>
			<scheduler>
				<action type="waitfor_irq" src_name="img_left"/>
				<action type="waitfor_irq" src_name="img_right"/>
				<action type="reconfigure" region="0" algorithm="debayer"/>
				<action type="reconfigure" region="1" algorithm="rectify"/>
				<action type="task" region="1" config="left" tdest="0">
					<dst name="img_rectified_left" amount="3"/>
				</action>
				<action type="task" region="0" tdest="4">
					<src1 name="img_left" vdma="3" amount="1"/>
				</action>
				<action type="waitfor_irq" region="0"/>
				<action type="waitfor_irq" region="1"/>
				<action type="task" region="1" config="right" tdest="0">
					<dst name="img_rectified_right" amount="3"/>
				</action>
				<action type="task" region="0" tdest="4">
					<src1 name="img_right" vdma="3" amount="1"/>
				</action>
				<action type="waitfor_irq" region="0"/>
				<action type="waitfor_irq" region="1"/>
				<action type="reconfigure" region="1" algorithm="stereo_matching"/>
				<action type="task" region="1" tdest="0">
					<src1 name="img_rectified_left" vdma="3" amount="3"/>
					<src2 name="img_rectified_right" vdma="4" amount="3"/>
					<dst name="img_disparity" amount="1"/>
				</action>
				<action type="waitfor_irq" region="1"/>
				<action type="reconfigure" region="0" algorithm="disp2pc"/>
				<!--action type="task" region="0" tdest="0">
					<src1 name="img_disparity" vdma="3" amount="1" />
					<src2 name="img_rectified_left" vdma="4" amount="3"/>
					<dst name="img_pointcloud" amount="16"/>
				</action>
				<action type="waitfor_irq" region="0"/>
				<action type="copy" src_name="img_pointcloud" dst_name="img_pc_small"/-->
				<action type="update" dst_name="img_rectified_right"/>
				<action type="update" dst_name="img_disparity"/>
			</scheduler>
		</config>
	</start>

	<start name="remote_rom_server_left">
		<binary name="remote_rom_server" />
		<resource name="RAM" quantum="65M"/>
		<route>
			<service name="ROM" label="img_disparity"> <child name="hw_accelerator"/> </service>
			<service name="Nic"> <child name="nic_bridge"/> </service>
			<any-service> <parent/> </any-service>
		</route>
		<config>
			<remote_rom binary="true" localname="img_disparity" name="image_remote_left" src="192.168.0.110" dst="192.168.0.111"> </remote_rom>
		</config>
	</start>

	<start name="remote_rom_server_right">
		<binary name="remote_rom_server" />
		<resource name="RAM" quantum="65M"/>
		<route>
			<service name="ROM" label="img_rectified_right"> <child name="hw_accelerator"/> </service>
			<service name="Nic"> <child name="nic_bridge"/> </service>
			<any-service> <parent/> </any-service>
		</route>
		<config>
			<remote_rom binary="true" localname="img_rectified_right" name="image_remote_right" src="192.168.0.110" dst="192.168.0.111"> </remote_rom>
		</config>
	</start>

	<start name="remote_rom_client">
		<resource name="RAM" quantum="65M"/>
		<route>
			<service name="Nic"> <child name="nic_bridge"/> </service>
			<any-service> <parent/> </any-service>
		</route>
		<provides><service name="ROM"/></provides>
		<config>
			<remote_rom binary="false" name="trigger_remote" src="192.168.0.110" dst="192.168.0.111">
			</remote_rom>
		</config>
	</start>

	<start name="nic_bridge">
		<resource name="RAM" quantum="128M"/>
		<provides><service name="Nic"/></provides>
		<route>
			<service name="Nic"> <child name="nic_drv"/> </service>
			<any-service> <parent/> </any-service>
		</route>
		<config></config>
	</start>

	<start name="nic_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Nic"/></provides>
	</start>

	<start name="sd_card">
		<binary name="sd_card_drv" />
		<resource name="RAM" quantum="1M" />
		<provides><service name="Block"/></provides>
	</start>

	<start name="fatfs_fs">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="File_system"/> </provides>
		<route>
			<service name="Block"> <child name="sd_card"/> </service>
			<any-service> <parent/> </any-service>
		</route>
		<config>
			<default-policy root="/" writeable="yes" />
		</config>
	</start>

	<start name="fs_rom">
		<resource name="RAM" quantum="16M"/>
		<provides> <service name="ROM"/> </provides>
		<route>
			<service name="File_system"> <child name="fatfs_fs"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

        <start name="bitstream_loader">
                <resource name="RAM" quantum="1M" />
                <provides> <service name="Dpr"/> </provides>
		<route>
			<service name="ROM" label="config_debayer_pblock_reconf_region_0_partial_pcap.bin"> <child name="fs_rom"/> </service>
			<service name="ROM" label="config_debayer_pblock_reconf_region_1_partial_pcap.bin"> <child name="fs_rom"/> </service>
			<service name="ROM" label="config_rectify_pblock_reconf_region_1_partial_pcap.bin"> <child name="fs_rom"/> </service>
			<service name="ROM" label="config_stereo_matching_pblock_reconf_region_1_partial_pcap.bin"> <child name="fs_rom"/> </service>
			<service name="ROM" label="config_disp2pc_pblock_reconf_region_0_partial_pcap.bin"> <child name="fs_rom"/> </service>
			<service name="ROM" label="config_disp2pc_pblock_reconf_region_1_partial_pcap.bin"> <child name="fs_rom"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
        <config verbose="yes">
        	<!--module debayer="1" rectify="2" stereo_matching="3" disp2pc="4"/--> 
			<file name="config_debayer_pblock_reconf_region_0_partial_pcap.bin" size="533732" module="1" region="0"/>
			<file name="config_debayer_pblock_reconf_region_1_partial_pcap.bin" size="2039292" module="1" region="1"/>
			<file name="config_rectify_pblock_reconf_region_1_partial_pcap.bin" size="2039292" module="2" region="1"/>
			<file name="config_stereo_matching_pblock_reconf_region_1_partial_pcap.bin" size="2039292" module="3" region="1"/>
			<file name="config_disp2pc_pblock_reconf_region_0_partial_pcap.bin" size="533732" module="4" region="0"/>
			<file name="config_disp2pc_pblock_reconf_region_1_partial_pcap.bin" size="2039292" module="4" region="1"/>
		</config>
	</start>
</config>
}

install_config $config

#
# Boot
#

build_boot_image {
	core
	init
	timer
	zynq_gpio_drv
	zynq_i2c_drv
	zynq_vdma_drv
	zynq_pl_irq_handler
	camera
	hw_accelerator
	opencv_core.lib.so
	opencv_imgproc.lib.so
	opencv_imgcodecs.lib.so
	ld.lib.so
	libc.lib.so
	libm.lib.so
	zlib.lib.so
	stdcxx.lib.so
	pthread.lib.so
	vfs.lib.so
	remote_rom_server
	remote_rom_client
	nic_drv
	nic_bridge
	sd_card_drv
	fatfs_fs
	fs_rom
	bitstream_loader
}

run_genode_until forever
